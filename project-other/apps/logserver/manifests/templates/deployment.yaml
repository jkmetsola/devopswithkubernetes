---
{{- with .Values}}
{{- template "deployment.spec.base" $}}
    spec:
      containers:
          {{- template "container.base" $}}
          ports:
            - containerPort: {{.appPort}}
          {{- template "probes.get" $}}
          {{- template "security.context" $}}
          {{- template "volumemounts.base" $}}
            - &logfile_mount
              name: {{.logFileVolumeName}}
              mountPath: {{.logFileMountPath}}
        - name: {{index .containerNames 1}}
          image: "{{.imageRegistry}}/{{index .containerNames 1}}:{{.versionTag}}"
          imagePullPolicy: {{.imagePullPolicy}}
          resources: *resource_limits
          command:
            - "/bin/bash"
            - "-c"
            - "{{.tempScriptVolumeMountPath}}/{{index .containerNames 1}}"
          env:
            - name: MESSAGE
              valueFrom:
                configMapKeyRef:
                  name: {{index .containerNames 0}}
                  key: MESSAGE
          envFrom:
            - secretRef:
                name: {{index .apps.postgres.containerNames 0}}
          readinessProbe:
            exec:
              command:
                - cat
                - "{{.logFileMountPath}}/{{.logFileName}}"
          {{- template "security.context" $}}
          {{- template "volumemounts.base" $}}
            - *logfile_mount
      {{- template "volumes.base" $}}
        - name: {{.logFileVolumeName}}
          emptyDir: {}
      terminationGracePeriodSeconds: 5
{{- end}}
