---
{{- with .Values}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{index .containerNames 0}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{index .containerNames 0}}
  template:
    metadata:
      labels:
        app: {{index .containerNames 0}}
    spec:
      containers:
        - name: {{index .containerNames 0}}
          image: "{{.imageRegistry}}/{{index .containerNames 0}}:{{.versionTag}}"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: "1"
              memory: "512Mi"
            requests:
              cpu: "100m"
              memory: "256Mi"
          command:
            - "/bin/bash"
            - "-c"
            - "{{.tempScriptVolumeMountPath}}/{{index .containerNames 0}}"
          envFrom:
            - secretRef:
                name: {{index .apps.postgres.containerNames 0}}
          ports:
            - containerPort: {{.appPort}}
          readinessProbe:
            httpGet:
              path: /
              port: {{.appPort}}
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 1000
            runAsNonRoot: true
          volumeMounts:
            - name: {{.sharedPersistentVolumeName}}
              mountPath: {{.sharedVolumeMountPath}}
            - name: {{.tempStartupScriptVolumeName}}
              mountPath: {{.tempScriptVolumeMountPath}}
              readOnly: true
      volumes:
        - name: {{.sharedPersistentVolumeName}}
          persistentVolumeClaim:
            claimName: {{.sharedPersistentVolumeClaimName}}
        - name: {{.tempStartupScriptVolumeName}}
          configMap:
            name: {{index .containerNames 0}}
            defaultMode: 0755
{{- end}}
