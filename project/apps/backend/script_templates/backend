#!/usr/bin/env python3

"""Simple server tool."""

import http.server
import json
import socketserver
import sys
from pathlib import Path

BACKEND_STORAGE_JSON = Path("{{.sharedVolumeMountPath}}") / "backendStorage.json"


class BackendRequestHandler(http.server.SimpleHTTPRequestHandler):
    """Request handler that serves the content of a xxxxx file."""

    def do_GET(self) -> None:  # noqa: N802
        """Handle GET requests by reading the file and returning its content."""
        self.send_response(200)
        self.send_header("Content-type", "application/json")
        self.end_headers()
        with Path(BACKEND_STORAGE_JSON).open() as file:
            self.wfile.write(file.read().encode("utf-8"))

    def do_POST(self) -> None:  # noqa: N802
        """Handle POST requests by adding the content to the file."""
        self.send_response(200)
        self.send_header("Content-type", "application/json")
        self.end_headers()
        post_data = self.rfile.read(int(self.headers["Content-Length"]))
        decoded_post_data = post_data.decode("utf-8")
        new_todo_item = decoded_post_data.split("=")[1]
        with Path(BACKEND_STORAGE_JSON).open() as file:
            data = json.load(file)
        data.append(new_todo_item)
        with Path(BACKEND_STORAGE_JSON).open("w+") as file:
            json.dump(data, file)
        resp_data = {"message": "POST request received", "data": decoded_post_data}
        self.wfile.write(json.dumps(resp_data).encode("utf-8"))


class BackendServer:  # noqa: D101
    @staticmethod
    def run(port: int) -> None:
        """Start the server."""
        if not Path(BACKEND_STORAGE_JSON).exists():
            with Path(BACKEND_STORAGE_JSON).open("w") as file:
                json.dump([], file)
        with socketserver.TCPServer(("", port), BackendRequestHandler) as httpd:
            sys.stdout.write(f"Server started in port {port}\n")
            sys.stdout.flush()
            httpd.serve_forever()


if __name__ == "__main__":
    BackendServer.run(int("{{.appPort}}"))
