#!/usr/bin/env python3

"""Simple server tool."""

import http.server
import socketserver
import sys
from pathlib import Path


class RequestHandler(http.server.SimpleHTTPRequestHandler):  # noqa: D101
    JS_SCRIPT_PATH = "{{.tempScriptVolumeMountPath}}/{{.fetchTodosScriptFile}}"

    def do_GET(self) -> None:  # noqa: N802
        """Handle GET requests by reading the log file and returning its content."""
        if self.path == self.JS_SCRIPT_PATH:
            self._handle_scriptfile()
        else:
            self._handle_frontpage()

    def _handle_frontpage(self) -> None:
        self.send_response(200)
        self.send_header("Content-type", "text/html")
        self.end_headers()
        index_file = Path("{{.tempScriptVolumeMountPath}}/{{.serverIndexFile}}")
        with index_file.open("r") as file:
            self.wfile.write(file.read().encode("utf-8"))

    def _handle_scriptfile(self) -> None:
        self.send_response(200)
        self.send_header("Content-type", "application/javascript")
        self.end_headers()
        script_file = Path(self.JS_SCRIPT_PATH)
        with script_file.open("r") as file:
            self.wfile.write(file.read().encode("utf-8"))


class FrontendServer:  # noqa: D101
    @staticmethod
    def run(port: int) -> None:
        """Start the server."""
        with socketserver.TCPServer(("", port), RequestHandler) as httpd:
            sys.stdout.write(f"Server started in port {port}\n")
            sys.stdout.flush()
            httpd.serve_forever()


if __name__ == "__main__":
    FrontendServer.run(int("{{.appPort}}"))
